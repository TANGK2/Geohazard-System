<!DOCTYPE html>
<html>

<head>
    <script src="https://unpkg.com/xlsx@0.17.4/dist/xlsx.full.min.js"></script>
    <script src="Script.js"></script>
    <link rel="stylesheet" type="text/css" href="Styles.css">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
        integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
        crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
        integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
        crossorigin=""></script>



    <style>
        #map {
            position: fixed;
            bottom: 30px;
            right: 100px;
            width: 800px;
            height: 800px;
        }

        .header {
            background-color: black;
            padding: 10px;
        }
    </style>

</head>

<body>
    <div class="header">
        <button class="logo">
            Logo
        </button>
        <button class="lline">
            Geohazard System
        </button>
        <button class="lline">
            About Us
        </button>
        <button class="lline">
            Contact Us
        </button>
        <button class="rline">
            Account<div class="dropdown-content">
                <p>Log in</p>
                <p>Log out</p>
            </div>
        </button>
    </div>
    <div class="mergin"></div>
    <form class="form1">
        <input type="text" placeholder="Search...">
        <button type="submit">Go</button>
    </form>
    <button class="dropdown" id="geologicalDisasterBtn">
        Geological Disaster Data<div class="dropdown-content" id="geologicalDisasterContent">
            <div class="geologicalDisasterItem">
                <img src="path/to/image1.jpg" alt="Image 1" class="geologicalDisasterImage">
                <p class="geologicalDisasterText">Image 1 description</p>
            </div>
            <div class="geologicalDisasterItem">
                <img src="path/to/image2.jpg" alt="Image 2" class="geologicalDisasterImage">
                <p class="geologicalDisasterText">Image 2 description</p>
            </div>
            <!-- Add more items as needed -->
        </div>
    </button>

    <button class="dropdown1">
        Geological Disaster Type<div class="dropdown-content">
            <p>xxxx</p>
            <p>xxxx</p>
        </div>
    </button>
    <button class="dropdown2">
        Region<div class="dropdown-content">
            <p>xxxx</p>
            <p>xxxx</p>
        </div>
    </button>
    <div id="map"></div>
    <script> //添加洪水标志
        // Set the initial coordinates to Malaysia
        var map = L.map('map').setView([3.14, 101.68], 13);

        L.tileLayer('https://stamen-tiles-{s}.a.ssl.fastly.net/terrain/{z}/{x}/{y}{r}.png', {
            attribution: 'Map tiles by <a href="http://stamen.com">Stamen Design</a>, under <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a>. Data by <a href="http://openstreetmap.org">OpenStreetMap</a>, under <a href="http://creativecommons.org/licenses/by-sa/3.0">CC BY SA</a>.',
            maxZoom: 18,
            subdomains: 'abcd'
        }).addTo(map);

        // Read the Excel file and create markers on the map
        var customIcon = L.icon({
            iconUrl: 'flood.jpeg',
            iconSize: [50, 50],
            className: 'circle-border'
        });

        var url = "flood.xlsx";
        var oReq = new XMLHttpRequest();
        oReq.open("GET", url, true);
        oReq.responseType = "arraybuffer";
        oReq.onload = function (e) {
            var arraybuffer = oReq.response;

            // Convert data to binary string
            var data = new Uint8Array(arraybuffer);
            var arr = new Array();
            for (var i = 0; i != data.length; ++i) {
                arr[i] = String.fromCharCode(data[i]);
            }
            var bstr = arr.join("");

            // Read Excel file
            var workbook = XLSX.read(bstr, {
                type: "binary"
            });

            // Get first sheet and convert to JSON
            var sheet_name_list = workbook.SheetNames;
            var jsonData = XLSX.utils.sheet_to_json(workbook.Sheets[sheet_name_list[0]]);


            // Create markers on the map
            jsonData.forEach(function (row) {
                var lat = row["Latitude"];
                var lng = row["Longitude"];
                var marker = L.marker([lng, lat], {
                    icon: customIcon
                }).bindPopup("Flood!!!").addTo(map);

            });
        };
        oReq.send();
    </script>
    <script>//添加山崩标志
        // Read the Excel file and create markers on the map
        var landSlideIcon = L.icon({
            iconUrl: 'landslide.jpeg',
            iconSize: [50, 50],
            className: 'circle-border'
        });

        var landSlideUrl = "landslide.xlsx";
        var landSlideReq = new XMLHttpRequest();
        landSlideReq.open("GET", landSlideUrl, true);
        landSlideReq.responseType = "arraybuffer";
        landSlideReq.onload = function (e) {
            var arraybuffer = landSlideReq.response;

            // Convert data to binary string
            var data = new Uint8Array(arraybuffer);
            var arr = new Array();
            for (var i = 0; i != data.length; ++i) {
                arr[i] = String.fromCharCode(data[i]);
            }
            var bstr = arr.join("");

            // Read Excel file
            var workbook = XLSX.read(bstr, {
                type: "binary"
            });

            // Get first sheet and convert to JSON
            var sheet_name_list = workbook.SheetNames;
            var jsonData = XLSX.utils.sheet_to_json(workbook.Sheets[sheet_name_list[1]]);

            // Create markers on the map
            jsonData.forEach(function (row) {
                var lat = row["Latitude"];
                var lng = row["Longitude"];
                var marker = L.marker([lng, lat], {
                    icon: landSlideIcon
                }).bindPopup("Landslide!!!").addTo(map);

            });
        };
        landSlideReq.send();
    </script>


</body>

</html>
